{
    "title": "Input schema for Instagram scraper",
    "description": "Below you can provide search query which will be used to search Instagram for profiles, hashtags or places. Alternatively you can provide direct page URLs. <br />Then on each page you can scrape page details, posts or comments. <br/> <strong>Important: Residential proxy is required to use this solution</strong>",
    "type": "object",
    "schemaVersion": 1,
    "properties": {
        "directUrls": {
            "title": "Direct URLs",
            "type": "array",
            "description": "If you already have URL(s) of page(s) you wish to scrape, you can set them here.",
            "editor": "stringList",
            "placeholderValue": "URL",
            "prefill": "https://www.instagram.com/apifytech/",
            "patternValue": "https:\\/\\/www\\.instagram\\.com\\/.+",
            "uniqueItems": true
        },
        "resultsType": {
            "title": "What to scrape from each page.",
            "type": "string",
            "description": "What to scrape from each Instagram page URL or search result.  You need to provide correct parent pages, e.g. comments can be scraped only from posts, not from profiles.",
            "editor": "select",
            "enum": ["posts", "comments", "details", "stories", "cookies"],
            "enumTitles": [
                "Posts (from profile pages, hashtag or place search)",
                "Comments (from post pages)",
                "Details (of profiles, posts or search pages - from a profile, post or search pages)",
                "Stories",
                "Cookies (will export cookies gained by login using IG credentials - loginUsername, loginPassword, these cookies can be used in later runs for authorization)"
            ],
            "default": "posts"
        },
        "resultsLimit": {
            "title": "Max items",
            "type": "integer",
            "description": "How many posts or comments to scrape from each Instagram URL or found page, ignored when \"Details\" type is specified. Notice that if you use search via hashtags or place, each found page will have this limit separately. You can limit searchLimit to reduce the number of total results.",
            "editor": "number",
            "unit": "per page",
            "default": 200
        },
        "search": {
            "title": "Search",
            "type": "string",
            "description": "Here you can provide a search query which will be used to search Instagram for profiles, hashtags or places. <br /><br /><strong>This field is optional, but this field or 'Direct Instagram page URLs' must be provided</strong>",
            "editor": "textfield",
            "sectionCaption": "Using searach term instead of direct URL",
            "sectionDescription": "This field is optional, but this field or 'Search' must be provided. Location URLs scroll only with login."
        },
        "searchType": {
            "title": "Search type",
            "type": "string",
            "description": "What type of pages to search (you can search hashtags, profiles and places)",
            "editor": "select",
            "enum": ["user", "hashtag", "place", "stories"],
            "enumTitles": [
                "Search users",
                "Search hashtags",
                "Search places (scrolls only with login)",
                "Stories (Only with login)"
            ],
            "default": "hashtag"
        },
        "searchLimit": {
            "title": "Search results limit",
            "type": "integer",
            "description": "How many search results (eq. pages) should be processed.",
            "editor": "number",
            "default": 10,
            "minimum": 1,
            "maximum": 100
        },
        "scrapePostsUntilDate": {
            "title": "Scrape until date",
            "type": "string",
            "description": "Scrapes post from the current date until it reaches a post older than a provided date. The date should be in format YYYY-MM-DD. By default scrapes all posts.",
            "editor": "hidden",
            "sectionCaption": "Time frame",
            "sectionDescription": "If you want to scrape posts or comments from specific time frame."
        },
        "fromDate": {
            "title": "Scrape from date",
            "type": "string",
            "description": "Scrapes post and comments from the current date until it reaches a post older than a provided date. The date should be in format YYYY-MM-DD or relative time . By default scrapes all posts.",
            "pattern": "^(today|yesterday|\\d+\\s?(minute|second|day|hour|month|year|week)s?|\\d{4}\\-\\d{2}\\-\\d{2}(\\s\\d{2}\\:\\d{2}\\:\\d{2})?)$",
            "editor": "textfield"
        },
        "untilDate": {
            "title": "Scrape until date",
            "type": "string",
            "description": "Scrapes posts and comments from the current date until it reaches a post older than a provided date. The date should be in format YYYY-MM-DD. By default scrapes all posts.",
            "pattern": "^(today|yesterday|\\d+\\s?(minute|second|day|hour|month|year|week)s?|\\d{4}\\-\\d{2}\\-\\d{2}(\\s\\d{2}\\:\\d{2}\\:\\d{2})?)$",
            "editor": "textfield"
        },
        "maxRequestRetries": {
            "title": "Max request retries",
            "type": "integer",
            "description": "How many times a page will be retried in case of being blocked or other errors.",
            "default": 5,
            "sectionCaption": "Proxy & browser configuration",
            "sectionDescription": "Here you can change different attributes of the scraper."
        },
        "scrollWaitSecs": {
            "title": "Scroll wait seconds",
            "type": "integer",
            "description": "How many seconds it will wait every 100 posts/comments when scrolling. If you scrape more than 1000 items, it is important to slow down to not get blocked. The seconds are randomized a bit. If you get blocked anyway, try to increase this number.",
            "default": 3
        },
        "proxy": {
            "title": "Proxy configuration",
            "type": "object",
            "description": "<strong>Proxy is required to run this actor!</strong> Either use Apify RESIDENTIAL proxy, or provide your own proxy servers. Non-RESIDENTIAL proxy groups usually don't work.",
            "prefill": {
                "useApifyProxy": true,
                "apifyProxyGroups": ["RESIDENTIAL"]
            },
            "editor": "proxy"
        },
        "loginCookies": {
            "title": "Cookies",
            "type": "array",
            "description": "If you want to sign in to Instagram to have access to more data than on anonymous profile, but do not wish to have your credentials in input, then you can use your cookies.",
            "editor": "json",
            "sectionCaption": "Login",
            "sectionDescription": "Instagram limits access to certain data (likes, post user data, followers and others) if a user is anonymous. You can provide your cookies here (copied from chrome plugin like 'EditThisCookie' to use a normal account. Do not use your own cookies here and rather create a new temporary account. When cookies are used, the run is limited to concurrency 1 and one session, so that the account does not get banned too soon."
        },
        "maxErrorCount": {
            "title": "Max error count cookies",
            "type": "integer",
            "description": "Setting this number too high might get your account blocked faster",
            "editor": "number",
            "default": 15
        },
        "cookiesPerConcurrency": {
            "title": "Concurrency",
            "type": "integer",
            "description": "Set number of cookies that are used per one concurrent browser. (e.g. if set to 3 and set 6 sets of loginCookies, then it will run with concurrency 2 so each browser can choose randomly from three sets of cookies.)",
            "editor": "number",
            "default": 1
        },
        "loginUsername": {
            "title": "Login Username",
            "type": "string",
            "description": "Login for IG account. You will have to fill in code, that you receive to email connected to IG account.",
            "editor": "textfield"
        },
        "loginPassword": {
            "title": "Login Password",
            "type": "string",
            "description": "Password for IG account. You will have to fill in code, that you receive to email connected to IG account.",
            "editor": "textfield"
        },
        "likedByLimit": {
            "title": "Get post likes",
            "type": "integer",
            "description": "If this limit is set above 0, then the solution will attempt to load additional details about users who liked the post.",
            "editor": "number",
            "unit": "likes",
            "default": 0,
            "sectionCaption": "Followers, following, likes (only with login)",
            "sectionDescription": "Features that require login. If limits in this section are set above 0, then when the solution enters a page, it attempts to load the specified items until the limit is reached. "
        },
        "followingLimit": {
            "title": "Get profile following",
            "type": "integer",
            "description": "If this limit is set above 0, then the solution will attempt to find users who the profile owner is following.",
            "editor": "number",
            "unit": "users",
            "default": 0
        },
        "followedByLimit": {
            "title": "Get profile followed by",
            "type": "integer",
            "description": "If this limit is set above 0, then the solution will attempt to find users who the profile owner is followed by.",
            "editor": "number",
            "unit": "users",
            "default": 0
        },
        "extendOutputFunction": {
            "title": "Extend Output Function",
            "description": "Add or remove properties on the output object or omit the output returning null",
            "type": "string",
            "default": "",
            "prefill": "async ({ data, item, helpers, page, customData, label }) => {\n  return item;\n}",
            "editor": "javascript",
            "sectionCaption": "Extend scraper functionality",
            "sectionDescription": "You can change the output of the items for your dataset here, or add additional behavior on the scraper."
        },
        "extendScraperFunction": {
            "title": "Extend Scraper Function",
            "description": "Advanced function that allows you to extend the default scraper functionality, allowing you to manually perform actions on the page",
            "type": "string",
            "default": "",
            "prefill": "async ({ page, request, label, response, helpers, requestQueue, logins, addProfile, addPost, addLocation, addHashtag, doRequest, customData, Apify }) => {\n \n}",
            "editor": "javascript"
        },
        "customData": {
            "title": "Custom data",
            "description": "Any data that you want to have available inside the Extend Output/Scraper Function",
            "default": {},
            "prefill": {},
            "type": "object",
            "editor": "json"
        },
        "expandOwners": {
            "title": "Query post owner",
            "type": "boolean",
            "description": "If this feature is used, then for each post the solution will attempt to query additional details about it's owner. This will drastically slow down the crawling speed and increase the chance of an account ban if credentials are provided.",
            "editor": "checkbox",
            "default": false,
            "sectionCaption": "Experimental features",
            "sectionDescription": "Features in this section are highly experimental, can result in a ban of the account if logged in and might cause the solution to fail."
        },
        "maxConcurrency": {
            "title": "Max Concurrency",
            "type": "integer",
            "description": "Max number of allowed instances running in parallel. More instances need more memory!",
            "editor": "number",
            "default": 1000
        },
        "useStealth": {
            "title": "Use stealth",
            "type": "boolean",
            "description": "Enable stealth in case of increased blocking",
            "editor": "checkbox",
            "default": false
        },
        "debugLog": {
            "title": "Debug Log",
            "description": "Enable a more verbose logging to be able to understand what's happening during the scraping",
            "type": "boolean",
            "default": false,
            "editor": "checkbox"
        },
        "includeHasStories": {
            "title": "Include Has Stories",
            "type": "boolean",
            "description": "If this feature is used, then for each user detail property has_public_story from xhr request is parsed.",
            "editor": "checkbox"
        }
    },
    "required": ["proxy"]
}
